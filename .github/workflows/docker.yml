name: Build and Push Docker Image

on:
  push:
    branches:
      - '**'
    paths:
      - '.github/workflows/docker.yml'
      - '.gitmodules'
      - 'Dockerfile'
      - 'poetry.lock'
      - 'pyproject.toml'
      - 'conda-lock.yml'

jobs:
  build-and-push-job:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    timeout-minutes: 600

    steps:
    - name: Maximize build space
      uses: AdityaGarg8/remove-unwanted-software@v2
      with:
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
        remove-docker-images: 'true'

    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Login to Docker Registry
      run: docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
      env:
        CI_REGISTRY: gitlab-registry.nrp-nautilus.io
        CI_REGISTRY_USER: ${{ secrets.DOCKER_USERNAME }}
        CI_REGISTRY_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      run: |
        GITLAB_USERNAME_LOWERCASE=$(echo ${{ secrets.GITLAB_USERNAME }} | tr '[:upper:]' '[:lower:]')
        CI_REGISTRY_IMAGE=gitlab-registry.nrp-nautilus.io/$GITLAB_USERNAME_LOWERCASE/${{ github.event.repository.name }}
        sudo rm -rf /opt/hostedtoolcache
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
        df -h
        mkdir -p .ssh/
        echo "${{ secrets.GIT_DEPLOY_KEY }}" | base64 -d | tr -d '\r' > .ssh/id_rsa
        echo "${{ secrets.SSH_CONFIG }}" | base64 -d | tr -d '\r' > .ssh/config
        ssh-keyscan -p 30622 gitlab-ssh.nrp-nautilus.io >> .ssh/known_hosts
        ssh-keyscan github.com >> .ssh/known_hosts
        docker build --no-cache -t $CI_REGISTRY_IMAGE:$GITHUB_SHA .
        docker tag $CI_REGISTRY_IMAGE:$GITHUB_SHA $CI_REGISTRY_IMAGE:latest
        docker push $CI_REGISTRY_IMAGE:$GITHUB_SHA
        docker push $CI_REGISTRY_IMAGE:latest
        docker rmi -f $CI_REGISTRY_IMAGE:$GITHUB_SHA $CI_REGISTRY_IMAGE:latest
        docker builder prune -a -f
      env:
        GIT_DEPLOY_KEY: ${{ secrets.GIT_DEPLOY_KEY }}
        SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        GITHUB_SHA: ${{ github.sha }}
